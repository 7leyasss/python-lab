import numpy as np
import matplotlib.pyplot as plt
from matplotlib.widgets import Slider
import math

def true_function(x, a, b, c):
    return a * np.power(x, b) + c

def generate_data(x_min, x_max, points, a, b, c):
    x = np.linspace(x_min, x_max, points)
    noise = np.random.normal(0, 2, size=points)
    y = true_function(x, a, b, c) + noise
    return x, y

def get_da(x, y, a, b, c):
    return (2 / len(x)) * np.sum((a * np.power(x, 2*b) + c * np.power(x, b) - y * np.power(x, b)))

def get_db(x, y, a, b, c):
    return (2 / len(x)) * np.sum(a * np.power(x, b) * np.log(np.abs(x)) * (a * np.power(x, b) + c - y))

def get_dc(x, y, a, b, c):
    return (2 / len(x)) * np.sum(a * np.power(x, b) + c - y)

def fit(x, y, speed, epochs, a0, b0, c0):
    a = a0
    b = b0
    c = c0
    a_history = [a0]
    b_history = [b0]
    c_history = [c0]
    
    for _ in range(epochs):
        da = get_da(x, y, a, b, c)
        db = get_db(x, y, a, b, c)
        dc = get_dc(x, y, a, b, c)
        a -= speed * da
        b -= speed * db
        c -= speed * dc
        a_history.append(a)
        b_history.append(b)
        c_history.append(c)
    
    return a_history, b_history, c_history

a_true = 3
b_true = 2
c_true = 2
x_min = 0.01
x_max = 3
points = 100
speed = 0.001
epochs = 1000
a0 = 1
b0 = 1
c0 = 3

x, y = generate_data(x_min, x_max, points, a_true, b_true, c_true)

a_history, b_history, c_history = fit(x, y, speed, epochs, a0, b0, c0)

fig, ax = plt.subplots()
plt.subplots_adjust(bottom=0.25)

scatter = ax.scatter(x, y, color='red', label='Исходные точки')

ideal_curve, = ax.plot(x, true_function(x, a_true, b_true, c_true), 'y--', label='Идеальная')

pred_curve, = ax.plot(x, true_function(x, a_history[0], b_history[0], c_history[0]), 'b-', label='Предсказанная')


ax.set_xlabel('x')
ax.set_ylabel('y')
ax.set_title('Степенная регрессия с градиентным спуском')
ax.legend()
ax.grid(True)

ax_slider = plt.axes([0.2, 0.1, 0.6, 0.03])
slider = Slider(ax_slider, 'Эпоха', 0, epochs, valinit=0, valstep=1)

def update(val):
    epoch = int(slider.val)
    current_a = a_history[epoch]
    current_b = b_history[epoch]
    current_c = c_history[epoch]
    pred_curve.set_ydata(true_function(x, current_a, current_b, current_c))
    ax.set_title(f'Степенная регрессия (a={current_a:.2f}, b={current_b:.2f}, c={current_c:.2f}, Эпоха={epoch})')
    fig.canvas.draw_idle()

slider.on_changed(update)

plt.show()

print(f"Итоговые параметры: a={a_history[-1]:.2f}, b={b_history[-1]:.2f}, c={c_history[-1]:.2f}")
