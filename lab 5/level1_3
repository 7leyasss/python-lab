3.Два велосипедиста одновременно начинают движение из одной точки. Первый начинает движение со скоростью 10 км/ч и равномер- но увеличивает скорость на 1 км/ч. Второй начинает движение со ско-

ростью 9 км/ч и равномерно увеличивает скорость на 1,6 км/ч. Опре делить:

а) какой спортсмен преодолеет большее расстояние через 1 ч, через 4 ч; б) когда второй спортсмен догонит первого.

Использовать метод для вычисления пути в зависимости от време ни по формуле
S = vt + at^2/2,
где v - начальная скорость; а - ускорение.

# Данные
v1 = 10  # начальная скорость первого спортсмена (км/ч)
a1 = 1   # ускорение первого спортсмена (км/ч²)
v2 = 9   # начальная скорость второго спортсмена (км/ч)
a2 = 1.6 # ускорение второго спортсмена (км/ч²)

# Функция для вычисления пути
def calculate_distance(v, a, t):
    return v * t + 0.5 * a * t**2

# а) Расстояние через 1 час и через 4 часа
t1 = 1
t2 = 4

S1_t1 = calculate_distance(v1, a1, t1)
S2_t1 = calculate_distance(v2, a2, t1)

S1_t2 = calculate_distance(v1, a1, t2)
S2_t2 = calculate_distance(v2, a2, t2)

print(f"Через 1 час: Первый спортсмен преодолеет {S1_t1} км, второй спортсмен преодолеет {S2_t1} км.")
print(f"Через 4 часа: Первый спортсмен преодолеет {S1_t2} км, второй спортсмен преодолеет {S2_t2} км.")

# б) Найдем время, когда второй спортсмен догонит первого
# Приравниваем пути: v1 * t + 0.5 * a1 * t^2 = v2 * t + 0.5 * a2 * t^2
from sympy import symbols, Eq, solve

# Определяем переменную t (время)
t = symbols('t')

# Уравнение для времени догонки
equation = Eq(v1 * t + 0.5 * a1 * t**2, v2 * t + 0.5 * a2 * t**2)

# Решаем уравнение
time_to_overtake = solve(equation, t)

# Выводим результат
# Нам нужно время больше 0, так как оно представляет физическое время
time_to_overtake = [t_value.evalf() for t_value in time_to_overtake if t_value > 0]
print(f"Второй спортсмен догонит первого через {time_to_overtake[0]} часов.")
